plugins {
    id "com.android.application"
    id "kotlin-android"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
    id "com.google.firebase.firebase-perf"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('keystore.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
// Resolve release signing only if fully configured and file exists
def resolvedStoreFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
def isReleaseSigningConfigured = resolvedStoreFile != null && resolvedStoreFile.exists() &&
        keystoreProperties['storePassword'] &&
        keystoreProperties['keyAlias'] &&
        keystoreProperties['keyPassword']

android {
    namespace "com.hafiz.app.hafiz_app"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    kotlinOptions {
        jvmTarget = '21'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.hafiz.app.hafiz_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        multiDexEnabled true
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }
    signingConfigs {
        if (isReleaseSigningConfigured) {
            release {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile resolvedStoreFile
                storePassword keystoreProperties['storePassword']
            }
        }
    }
    buildTypes {
        release {
            if (isReleaseSigningConfigured) {
                signingConfig signingConfigs.release
            } else {
                println("[Gradle] Warning: Release keystore not configured or keystore file missing. Using debug signing for release build.")
                signingConfig signingConfigs.debug
            }
        }
    }
}

flutter {
    source '../..'
}

// Use JDK 21 for Kotlin compilation while targeting JVM 17 bytecode
// to maintain Android toolchain compatibility.
kotlin {
    jvmToolchain(21)
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.12.0'
}
